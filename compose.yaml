services:
  web:
    build:
      context: backend
      dockerfile: Dockerfile
      # command: ["tail", "-f", "/dev/null"]
      # command: python manage.py runserver 0.0.0.0:8000
    command: bash -c 
      " python manage.py makemigrations --noinput
        && python manage.py migrate
        && python manage.py collectstatic --no-input
        && python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./backend:/usr/src/backend
    env_file:
      - ./.env.dev
    # depends_on:
    #   db:
    #     condition: service_healthy

  redis:
    restart: unless-stopped
    image: redis
    expose:
      - 6379

  node:
    build:
      context: backend
      dockerfile: Dockerfile.node
    command: npx @tailwindcss/cli -i ./staticfiles/css/input.css -o ./staticfiles/css/output.css --watch
    tty: true
    volumes:
      - ./backend/staticfiles:/usr/src/backend/staticfiles

#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     env_file:
#       - ./.env.prod.db
#     ports:
#       - 5432:5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:


