# syntax=docker/dockerfile:1
ARG PYTHON_VERSION=3.12

#
# Stage 1
#

FROM node:21-alpine AS node-build

RUN mkdir -p /home/app/node
WORKDIR /home/app/node

COPY package*.json .
RUN npm install
RUN npm install tailwindcss @tailwindcss/postcss postcss postcss-cli postcss-font-magician autoprefixer 
COPY . .
RUN npx tailwindcss -i ./staticfiles/css/input.css -o ./staticfiles/css/output.css

#
# Stage 2
#

FROM python:${PYTHON_VERSION}-slim as base

ENV PYTHONDONTWRITEBYTECODE=1

ENV PYTHONUNBUFFERED=1

ENV APP_HOME=/home/backend
RUN mkdir -p $APP_HOME
WORKDIR $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles

ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser

RUN pip install --upgrade pip

RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=bind,source=requirements.txt,target=requirements.txt \
    python -m pip install -r ./requirements.txt

COPY . $APP_HOME
COPY --from=node-build /home/app/node $APP_HOME
RUN chown -R appuser:appuser $APP_HOME

USER appuser